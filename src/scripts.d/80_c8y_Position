#!/bin/sh
#
# Get position/location information about the device using the ipinfo.io service
# The output is stored on disk to reduce number of requests to once per startup
#
# Example
# $ ./80_c8y_Position
# ip="8.8.8.8"
# city="Hamburg"
# country="DE"
# timezone="Europe/Berlin"
# lat=53.5507
# lng=9.9930
#

fail() {
    rc=$1
    shift
    echo "${0}: $*" >&2
    exit "$rc"
}

TIMEOUT=30  # Request timeout
TEMPFILE="/tmp/tedge/device-location"

# check for empty file
if [ -f "${TEMPFILE}" ] && [ -z "$(cat "${TEMPFILE}")" ]; then
    echo "Removing empty file. path=${TEMPFILE}" >&2
    rm -f "${TEMPFILE}"
fi

if [ ! -f "${TEMPFILE}" ]; then
    if command -V wget >/dev/null 2>&1; then
        echo "Using wget to send request to ipinfo.io" >&2
        ip_info=$(
            wget \
                --timeout=${TIMEOUT} -q -O /dev/stdout \
                --header 'Accept: application/json' \
                https://ipinfo.io
        )
    elif command -V curl >/dev/null 2>&1; then
        echo "Using curl to send request to ipinfo.io" >&2
        ip_info=$(
            curl \
                -sfL \
                --connect-timeout "$TIMEOUT" \
                -H 'Accept: application/json' \
                https://ipinfo.io
        )
    else
        fail 2 "Missing dependency. Script requires either wget or curl"
    fi
    # shellcheck disable=SC2181
    if [ "$?" != 0 ] || [ -z "${ip_info}" ]; then
        fail 2 "Unable to get IP info from ipinfo.io"
    fi

    # Fetch and cache geo location data
    mkdir -p "$(dirname "${TEMPFILE}")" || \
        fail $? "Failed to create temporary storage for geo location data. path=${TEMPFILE}"

    get_json() {
        # only use grep to parse the json output
        echo "$ip_info" | grep -o "\"$1\": *\"[^\"]*" | grep -o '[^"]*$'
    }

    cat <<EOT > "${TEMPFILE}"
ip="$(get_json ip)"
city="$(get_json city)"
country="$(get_json country)"
timezone="$(get_json timezone)"
lat=$(get_json loc | cut -d, -f1)
lng=$(get_json loc | cut -d, -f2)
EOT
else
    echo "Using cached location file. path=${TEMPFILE}" >&2
fi

cat "$TEMPFILE"
exit $?
